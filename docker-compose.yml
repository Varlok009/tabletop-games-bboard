version: '2.2'

services:
  app:
    restart: always
    build:
      context: .
    env_file: .env
    cpus: 2
    mem_limit: 564m
    ports:
      - '5000:5000'
    volumes:
      - .:/app

  news:
    restart: always
    build:
      context: ./tabletop-games-news
    env_file: ./tabletop-games-news/.env
    cpus: 2
    mem_limit: 256m
    ports:
      - '5001:5001'
    volumes:
      -  ./tabletop-games-news:/news
    depends_on: 
      news_db:
        condition: service_healthy

  parser:
    restart: 'no'
    build:
      context: ./tabletop-games-news
    env_file: ./tabletop-games-news/.env
    volumes:
      -  ./tabletop-games-news:/news
    depends_on: 
      news_db:
        condition: service_healthy
    command: python parser.py
  
  tasks:
    restart: 'no'
    build:
      context: ./tabletop-games-news
    env_file: ./tabletop-games-news/.env
    volumes:
      -  ./tabletop-games-news:/news
    depends_on: 
      news_db:
        condition: service_healthy
    command: celery -A parser_run_task worker -B --loglevel=INFO

  news_db:
    image: postgres:14-alpine
    env_file: ./tabletop-games-news/.env
    volumes:
      - newsdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 5432:5432
  
  redis:
    image: redis:6.2
    volumes:
      - redisdata:/storage/redis/data
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30
    ports:
      - 6379:6380
    command: redis-server --appendonly yes

volumes:
  newsdata:
  redisdata: